{
  "version": 3,
  "sources": ["../../node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/index.ts", "../../node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx"],
  "sourcesContent": ["export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n"],
  "mappings": ";;;;;;;;;ACGA,IAAMA,6CAAmBC,aAAAA,eAA2CC,MAA3C;AAiBzB,SAASC,0CAAaC,UAAsB;AAC1C,QAAMC,gBAAYC,aAAAA,YAAiBC,sCAAjB;AAClB,SAAOH,YAAYC,aAAa;;",
  "names": ["DirectionContext", "React", "undefined", "useDirection", "localDir", "globalDir", "React", "DirectionContext"]
}
